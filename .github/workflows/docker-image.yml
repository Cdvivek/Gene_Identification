name: Gene Identification CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10.13'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f Requirements.txt ]; then
          pip install -r Requirements.txt
        else
          echo "Warning: Requirements.txt not found"
        fi

    - name: Create synthetic test data
      run: |
        python - <<EOF
        import pandas as pd
        import numpy as np

        # Create synthetic test data
        test_data = pd.DataFrame({
            'sequence': ['ATCG', 'GCTA', 'TGCA'],
            'label': ['gene1', 'gene2', 'gene3'],
            'score': np.random.random(3)
        })

        # Save test data to the current directory
        test_data.to_csv('data_cleaned.csv', index=False)
        print("Test data created successfully")
        EOF

    - name: Run the application
      run: |
        export PYTHONPATH="${PYTHONPATH}:${PWD}"
        python app.py

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.vivek200404 }}
        password: ${{ secrets.dckr_pat_ooyd8gRsrqnueYpWbJwJsn5Sq88 }}

    - name: Create Dockerfile
      run: |
        cat > Dockerfile << 'EOL'
        FROM python:3.10-slim

        WORKDIR /app

        # Install system dependencies
        RUN apt-get update && apt-get install -y \
            gcc \
            g++ \
            && rm -rf /var/lib/apt/lists/*

        # Copy requirements first to leverage Docker cache
        COPY Requirements.txt ./Requirements.txt
        RUN pip install --no-cache-dir -r Requirements.txt

        # Copy the project files, excluding test data
        COPY app.py ./app.py
        COPY GeneIdentification.ipynb ./GeneIdentification.ipynb

        # Set Python path
        ENV PYTHONPATH=/app

        # Run the application
        CMD ["python", "app.py"]
        EOL

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ secrets.vivek200404 }}/gene-identification:latest
          ${{ secrets.vivek200404 }}/gene-identification:${{ github.sha }}
