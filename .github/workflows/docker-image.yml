name: Gene Identification CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f Requirements.txt ]; then
          pip install -r Requirements.txt
        else
          echo "Requirements.txt not found"
          exit 1
        fi
        
        # Install additional dependencies for notebook testing
        pip install nbconvert jupyter pytest-notebook
    
    - name: Run Python tests
      run: |
        # Test the main application
        python -m pytest app.py
        
        # Convert and test notebook
        jupyter nbconvert --to python GeneIdentification.ipynb
        python -m pytest GeneIdentification.py

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    
    - name: Create Dockerfile
      run: |
        cat > Dockerfile << 'EOL'
        FROM python:3.10-slim

        WORKDIR /app

        # Install system dependencies
        RUN apt-get update && apt-get install -y \
            gcc \
            g++ \
            && rm -rf /var/lib/apt/lists/*

        # Copy requirements first to leverage Docker cache
        COPY Requirements.txt .
        RUN pip install --no-cache-dir -r Requirements.txt

        # Copy the project files
        COPY app.py .
        COPY GeneIdentification.ipynb .
        COPY data_cleaned.csv .
        COPY Data/ ./Data/

        # Set Python path
        ENV PYTHONPATH=/app

        # Run the application
        CMD ["python", "app.py"]
        EOL
    
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/gene-identification:latest
          ${{ secrets.DOCKER_USERNAME }}/gene-identification:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/gene-identification:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/gene-identification:buildcache,mode=max
    
    - name: Run smoke test
      run: |
        docker run ${{ secrets.DOCKER_USERNAME }}/gene-identification:${{ github.sha }} python -c "import app; print('Smoke test passed')"
