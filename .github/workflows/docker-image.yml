name: Gene Identification CI/CD
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]  # Run on both Ubuntu and Windows
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10.13'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-notebook nbconvert jupyter
        pip install -r Requirements.txt
      shell: bash

    - name: Create synthetic test data
      run: |
        python -c "import pandas as pd; import numpy as np; import os; \
        os.makedirs('Data', exist_ok=True); \
        pd.DataFrame({'sequence': ['ATCG', 'GCTA', 'TGCA'], \
                      'label': ['gene1', 'gene2', 'gene3'], \
                      'score': np.random.random(3)}) \
        .to_csv('Data/synthetic_data.csv', index=False); \
        print('Synthetic test data created successfully')"
      shell: bash

    - name: Run Python tests
      run: |
        pytest -v
        if [ -f GeneIdentification.ipynb ]; then
          jupyter nbconvert --to python GeneIdentification.ipynb
          pytest GeneIdentification.py -v
        else
          echo "Warning: GeneIdentification.ipynb not found"
      shell: bash

  build-and-push:
    needs: test
    runs-on: ubuntu-latest  # Docker builds are more stable on Linux
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    
    - name: Create Dockerfile
      run: |
        cat > Dockerfile << 'EOL'
        FROM python:3.10-slim

        WORKDIR /app

        # Install system dependencies
        RUN apt-get update && apt-get install -y \
            gcc \
            g++ \
            && rm -rf /var/lib/apt/lists/*

        # Copy requirements first to leverage Docker cache
        COPY Requirements.txt ./
        RUN pip install --no-cache-dir -r Requirements.txt

        # Copy the project files
        COPY app.py ./
        COPY GeneIdentification.ipynb ./
        COPY ./Data ./Data

        # Generate synthetic data during the build
        RUN python -c "import pandas as pd; import numpy as np; import os; \
        os.makedirs('Data', exist_ok=True); \
        pd.DataFrame({'sequence': ['ATCG', 'GCTA', 'TGCA'], \
                      'label': ['gene1', 'gene2', 'gene3'], \
                      'score': np.random.random(3)}) \
        .to_csv('Data/synthetic_data.csv', index=False)"

        # Set Python path
        ENV PYTHONPATH=/app

        # Run the application
        CMD ["python", "app.py"]
        EOL

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/gene-identification:latest
          ${{ secrets.DOCKER_USERNAME }}/gene-identification:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/gene-identification:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/gene-identification:buildcache,mode=max
    
    - name: Run smoke test
      run: |
        docker run --rm ${{ secrets.DOCKER_USERNAME }}/gene-identification:${{ github.sha }} python -c "print('Smoke test passed')"
